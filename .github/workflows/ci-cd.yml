name: Savoon Bank CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Test and Build Backend
  backend-ci:
    name: Backend CI/CD
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci --omit=dev --audit=false
      
    - name: Run backend linting
      working-directory: ./backend
      run: |
        npm install --save-dev eslint
        npx eslint . --ext .js --ignore-pattern node_modules/ || true
        
    - name: Run backend tests
      working-directory: ./backend
      run: npm test
      env:
        NODE_ENV: test
        
    - name: Run security audit
      working-directory: ./backend
      run: npm audit --audit-level=high || true
      
    - name: Run Snyk security scan (Backend)
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --prod --timeout=300s
        command: test
      working-directory: ./backend
      
    - name: Upload Snyk results to GitHub Code Scanning (Backend)
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: snyk.sarif
        category: snyk-backend
        
    - name: Backend build completed
      working-directory: ./backend
      run: |
        echo "Backend build completed"
        
  # Job 2: Test and Build Frontend
  frontend-ci:
    name: Frontend CI/CD
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run frontend linting
      working-directory: ./frontend
      run: |
         # Install ESLint if not present and run linting
         if ! npm run lint 2>/dev/null; then
          echo "Lint script not found or failed, installing ESLint..."
          npm install --save-dev eslint
         npx eslint src --ext .js,.jsx --report-unused-disable-directives --max-warnings 0 || true
         fi
        
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false --passWithNoTests
      env:
        CI: true
        
    - name: Build frontend for production
      working-directory: ./frontend
      run: npm run build
      
    - name: Run security audit
      working-directory: ./frontend
      run: npm audit --audit-level=high || true
      
    - name: Run Snyk security scan (Frontend)
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --prod --timeout=300s
        command: test
      working-directory: ./frontend
      
    - name: Upload Snyk results to GitHub Code Scanning (Frontend)
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: snyk.sarif
        category: snyk-frontend
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: frontend/build/
        retention-days: 7

 
  # Job 3: Security Scanning
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Snyk CLI
      run: npm install -g snyk
      
    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
    - name: Run comprehensive Snyk scan for Backend
      working-directory: ./backend
      run: |
        npm ci --omit=dev
        snyk test --prod --severity-threshold=medium --json > ../backend-snyk-results.json || true
        snyk monitor --prod --project-name="savoon-bank-backend" || true
      continue-on-error: true
      
    - name: Run comprehensive Snyk scan for Frontend  
      working-directory: ./frontend
      run: |
        npm ci --omit=dev
        snyk test --prod --severity-threshold=medium --json > ../frontend-snyk-results.json || true
        snyk monitor --prod --project-name="savoon-bank-frontend" || true
      continue-on-error: true
      
    - name: Generate security summary
      run: |
        echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "### Backend Security Scan" >> $GITHUB_STEP_SUMMARY
        if [ -f backend-snyk-results.json ]; then
          echo "Backend scan completed - check Snyk dashboard for details" >> $GITHUB_STEP_SUMMARY
        else
          echo "Backend scan failed or no results" >> $GITHUB_STEP_SUMMARY
        fi
        echo "### Frontend Security Scan" >> $GITHUB_STEP_SUMMARY
        if [ -f frontend-snyk-results.json ]; then
          echo "Frontend scan completed - check Snyk dashboard for details" >> $GITHUB_STEP_SUMMARY
        else
          echo "Frontend scan failed or no results" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: |
          backend-snyk-results.json
          frontend-snyk-results.json
        retention-days: 30
