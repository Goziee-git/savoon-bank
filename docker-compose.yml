version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: savoon-bank-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_PATH=/app/data/database.sqlite
    volumes:
      - backend_data:/app/data
    networks:
      - savoon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: savoon-bank-frontend
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - savoon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database backup service (optional)
  db-backup:
    image: alpine:latest
    container_name: savoon-bank-backup
    volumes:
      - backend_data:/data
      - ./backups:/backups
    command: >
      sh -c "
        while true; do
          echo 'Creating database backup...'
          cp /data/database.sqlite /backups/database-backup-$$(date +%Y%m%d-%H%M%S).sqlite
          find /backups -name 'database-backup-*.sqlite' -mtime +7 -delete
          sleep 86400
        done
      "
    networks:
      - savoon-network
    restart: unless-stopped

volumes:
  backend_data:
    driver: local

networks:
  savoon-network:
    driver: bridge
